<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kubeadm on Qin的自习室</title>
    <link>https://op-y.github.io/tags/kubeadm/</link>
    <description>Recent content in kubeadm on Qin的自习室</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 02 Jan 2024 20:00:00 +0800</lastBuildDate><atom:link href="https://op-y.github.io/tags/kubeadm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>kubeadm实战: 新增工作节点</title>
      <link>https://op-y.github.io/kubeadm-node-join/</link>
      <pubDate>Tue, 02 Jan 2024 20:00:00 +0800</pubDate>
      
      <guid>https://op-y.github.io/kubeadm-node-join/</guid>
      <description>目标 这篇笔记记录的是使用 kubeadm 完成一个新的工作节点（worker node）加入已有 Kubernetes 集群（这个集群也是通过 kubeadm 创建的，版本为 v1.27.2。）
准备机器 已有集群是使用阿里云轻应用服务器作为实验环境搭建的，所以先准备一台新的集群，选用了 Ubuntu 镜像（原有节点使用的 Debian，操作验证了不同 Linux 发行版组成集群没啥问题）。
安装容器运行时 由于集群使用的 Kubernetes 1.27 Containerd，这里保持一致。
内核模块安装和内核参数设置 cat &amp;lt;&amp;lt;EOF | tee /etc/modules-load.d/k8s.conf overlay br_netfilter EOF modprobe overlay modprobe br_netfilter # 设置所需的 sysctl 参数，参数在重新启动后保持不变 cat &amp;lt;&amp;lt;EOF | tee /etc/sysctl.d/k8s.conf net.bridge.bridge-nf-call-iptables = 1 net.bridge.bridge-nf-call-ip6tables = 1 net.ipv4.ip_forward = 1 EOF # 应用 sysctl 参数而不重新启动 sysctl --system  安装containerd # 参考https://github.com/containerd/containerd/blob/main/docs/getting-started.md # 版本保持一致 1.7.2 wget https://github.com/containerd/containerd/releases/download/v1.7.2/containerd-1.7.2-linux-amd64.tar.gz tar Cxzvf /usr/local containerd-1.</description>
    </item>
    
  </channel>
</rss>
